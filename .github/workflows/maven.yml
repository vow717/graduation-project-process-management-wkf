# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: docker push
      run: |
        ${{ secrets.aliyun_dockerlogin }}
        docker build . -t ${{ secrets.aliyun_dockerrepository }}
        docker push ${{ secrets.aliyun_dockerrepository }}

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.aliyun_host }}
            username: ${{ secrets.aliyun_username }}
            password: ${{ secrets.aliyun_pwd }}
            script: |
              ${{ secrets.aliyun_dockerlogin }}
              docker stop $(docker ps --filter ancestor=${{secrets.aliyun_dockerrepository}} -q)
              docker rm -v $(docker ps -a --filter ancestor=${{secrets.aliyun_dockerrepository}} -q)
              docker rmi -f $(docker images ${{secrets.aliyun_dockerrepository}} -q)
              
              docker pull ${{ secrets.aliyun_dockerrepository }}
              docker run -p 8080:8080 -d ${{ secrets.aliyun_dockerrepository }}